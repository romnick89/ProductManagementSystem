@model IEnumerable<ProductReadOnlyVM>

@{
    ViewData["Title"] = "DisplayByType";
    var count = 0;
}

<h1>DisplayByType</h1>

@foreach(var item in Model)
{
    if(count == 0)
    {
        <p>
            <a asp-action="Create" asp-route-id="@item.ProductType.Id" class="btn btn-outline-primary">+Add New Product</a>
        </p>
        count++;
    }
}


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<p>
    <a asp-controller="ProductTypes" asp-action="Index" class="btn btn-outline-warning">Return to Product Types</a>
</p>
