@model IEnumerable<OrderListReadOnlyVM>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    @* <a asp-action="Create">Create New</a> *@
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Product.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product.ProductType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product.AmountToBeOrdered)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.Product.Description)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.Product.ProductType.Name)
            </td>
            <td>x
                    @Html.DisplayFor(modelItem => item.Product.AmountToBeOrdered)
            </td>
            <td>
                @* <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> | *@
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Remove</a>
            </td>
        </tr>
}
    </tbody>
</table>
<p>
    <a asp-controller="ProductTypes" asp-action="Index" class="btn btn-outline-warning">Return to Product Types</a>
    <form asp-action="RemoveAll">
        <input type="submit" value="Remove All" class="btn btn-outline-danger float-end" />
    </form>
    
</p>
